name: Build Clean Release

on:
  push:
    branches: [ main, master ]

env:
  MODULE_NAME: ${{ vars.MODULE_NAME || github.event.repository.name }}

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set build name
        run: |
          echo "BUILD_NAME=${MODULE_NAME} Build${GITHUB_RUN_NUMBER}" >> "$GITHUB_ENV"

      - name: Create build directory
        run: |
          mkdir -p "build/${MODULE_NAME}"
          find . -maxdepth 1 -not -path . -not -path ./build -exec cp -r {} "build/${MODULE_NAME}/" \;

      - name: Clean up unnecessary files
        run: |
          cd "build/${MODULE_NAME}"

          rm -rf .git .github .svn .hg
          rm -f .gitignore .gitattributes .gitmodules

          rm -f README.md LICENSE CHANGELOG.md CONTRIBUTING.md .editorconfig

          rm -f CLAUDE.md AGENTS.md CURSOR_RULES.md .cursorrules

          rm -rf .vscode .idea .eclipse .netbeans *.sublime-project *.sublime-workspace
          find . -name ".DS_Store" -delete
          find . -name "Thumbs.db" -delete

          rm -f package.json package-lock.json yarn.lock
          rm -rf node_modules

          rm -f .eslintrc* .prettierrc* jsconfig.json tsconfig.json

          rm -rf .circleci .travis
          rm -f appveyor.yml azure-pipelines.yml

          rm -f Dockerfile docker-compose.yml .dockerignore

          rm -f *.log *.tmp
          rm -rf tmp temp
          find . -name "*.bak" -delete
          find . -name "*.orig" -delete

      - name: Show final structure
        run: |
          echo "Final ${MODULE_NAME} structure:"
          find "build/${MODULE_NAME}" -type f | head -20
          echo "..."
          echo "Total files: $(find "build/${MODULE_NAME}" -type f | wc -l)"

      - name: Create ZIP archive (folder name == ${MODULE_NAME}, zip file == ${BUILD_NAME}.zip)
        run: |
          cd build
          zip -r "${BUILD_NAME}.zip" "${MODULE_NAME}/"
          echo "ZIP file created:"
          ls -lh "${BUILD_NAME}.zip"

      - name: Upload clean module
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BUILD_NAME }}
          path: build/${{ env.BUILD_NAME }}.zip
